#!/usr/bin/env bash

set -e

echo '
        .___      __    _____.__.__                 
      __| _/_____/  |__/ ____\__|  |   ____   ______
     / __ |/  _ \   __\   __\|  |  | _/ __ \ /  ___/
    / /_/ (  <_> )  |  |  |  |  |  |_\  ___/ \___ \ 
    \____ |\____/|__|  |__|  |__|____/\___  >____  >
         \/                               \/     \/ 

'

# Checks if a command exists
exists() {
    command -v "$1" > /dev/null 2>&1
}

# Makes sure a package installed
ensure() {
    PACKAGE=$1 
    if ! exists $PACKAGE; then
        # Install the package if it doesn't exist.
        sudo apt-get -y install $PACKAGE
    fi
}

# Makes sure git is installed
ensure 'git'

DOTFILES_DIR=~/.dotfiles

if [ -f "src/common/dotbot.main.yml" ]; then
    # The install command is run insides j 
    
    ./build
else

    # The script is run outside of the git repository.
    # This could happen when user try to install the code base
    # directly like below.
    # curl -L https://raw.githubusercontent.com/trungngo/dotfiles/master/install | sh

    REPO_URL=https://github.com/trungngo/dotfiles.git
    if [ -d "$DOTFILES_DIR" ]; then
        cd $DOTFILES_DIR
        # Dotfiles has been installed before.
        # Don't need to clone the git repository.
        git pull $REPO_URL 
        # Just need to build it.
        ./build
    else
        # If the above file doesn't exist, this install script
        # is run from a different location rather then its source.
        # In this case, we will need to pull the source code from
        # github to the ro
        # Clones the dotfiles from github
        git clone $REPO_URL $DOTFILES_DIR
        cd $DOTFILES_DIR

        # Moves to .dotfiles directories
        ./build
    fi
fi


